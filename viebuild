#!/bin/bash
# Opens the ebuild file for the given package, with the
# installed version or the available stable version

source /etc/portage/make.conf

EDITOR=${EDITOR:-vi}
PORTDIR=${PORTDIR:-/usr/portage}

function installed_version() {
	eix --format '<installedversions:NAMEVERSION>' --exact --pure-packages "$1"
}

function best_version() {
	eix --format '<bestversion:NAMEVERSION>' --exact --pure-packages "$1"
}

function overlay_location() {
	eix --format '<installedversions:NAMEVERSION>' --exact "$1" | awk '/^\[/{print $NF}'
}

function pkg_matches() {
	eix --exact --only-names "$1"
}

PKG=$(pkg_matches $1)

if [[ $? != 0 ]]; then
	echo "No match found."
	exit 1
fi

PKG_ARRAY=( $PKG )
COUNT=${#PKG_ARRAY[@]}

if [[ $COUNT > 1 ]]; then
	echo "More than 1 match found:"
	for (( i=0; i<COUNT; i++ )); do
		echo " $i - ${PKG_ARRAY[$i]}"
	done
	read -p "Which do you want? " n
	PKG=${PKG_ARRAY[$n]}
	[[ ! $n || ! $PKG ]] && exit 1
fi

PKGVER=$(installed_version $PKG)

if [[ $? != 0 ]]; then # Not installed package
	PKGVER=$(best_version $PKG)
fi

FILENAME=${PKG}/${PKGVER#*/}.ebuild
FILEPATH="${PORTDIR}/${FILENAME}"

if [ ! -f "$FILEPATH" ]; then

	# Try to find it in a overlay
	PORTDIR="$(overlay_location "$PKG")"
	FILEPATH="${PORTDIR}/${FILENAME}"

	if [ ! -f "$FILEPATH" ]; then

		# It could be a installed version that is gone from the repo
		# So instead show the last version available
		PKGVER=$(best_version $PKG)
		FILENAME=${PKG}/${PKGVER#*/}.ebuild
		FILEPATH="${PORTDIR}/${FILENAME}"

		if [ ! -f "$FILEPATH" ]; then
			echo "File '$FILEPATH' does not exists. Something went wrong..."
			exit 1
		fi
	fi
fi

# Is the output to the terminal?
if [ -t 1 ]; then
	$EDITOR $FILEPATH
else # Or probably a pipe
	echo "$FILEPATH"
fi

